<?xml version="1.0" encoding="UTF-8"?>
<beans  
    xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:context="http://www.springframework.org/schema/context"    
    xmlns:mvc="http://www.springframework.org/schema/mvc"    
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
    
    <aop:aspectj-autoproxy/>   

  
    <context:component-scan base-package="com.hongbao.boapp.businessobject"></context:component-scan>
    <context:component-scan base-package="com.hongbao.boapp.dao"></context:component-scan>
    <context:component-scan base-package="com.hongbao.boapp.daoImpl"></context:component-scan>
    <context:component-scan base-package="com.hongbao.boapp.service"></context:component-scan>
    <context:component-scan base-package="com.hongbao.boapp.serviceImpl"></context:component-scan>
    <context:component-scan base-package="com.hongbao.boapp.serviceobject"></context:component-scan>
	<context:component-scan base-package="com.hongbao.dragon.aspectj"></context:component-scan>

    
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>  

   <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:/META-INF/jdbc.properties" />  
    </bean>  
    <!-- 配置dbcp数据源 -->  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">  
        <property name="driverClassName" value="${driver}"></property>  
        <property name="url" value="${url}"></property>  
        <property name="username" value="${username}"></property>  
        <property name="password" value="${password}"></property>  
        <property name="initialSize" value="${initialSize}"></property>  <!-- 连接池启动时的初始值 --> 
        <property name="maxActive" value="${maxActive}"></property> <!-- 可从对象池中的最大值 --> 
        <property name="maxIdle" value="${maxIdle}"></property>  <!-- 最大等待连接数量，当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 --> 
        <property name="minIdle" value="${minIdle}"></property>  <!-- 对象池中对象最小个数,当空闲的连接数少于对应值时，连接池就会去预申请一些连接，一面洪锋来不及申请 --> 
        <property name="maxWait" value="${maxWait}"></property> <!-- 最大等待描述，单位为ms，超时会丢出错误信息 --> 
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"></property><!-- 运行判断连接超时任务的时间间隔,默认为－1，即不执行任务 -->
        <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"></property><!-- 连接的超时时间 -->
    </bean>  
      
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="configLocation" value="classpath:/META-INF/mybatis-config.xml"></property>
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:/com/hongbao/boapp/mapping/*.xml"></property>  
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.hongbao.boapp.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
      
    
      
    <!-- 配置一个事务管理器 -->  
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    <tx:annotation-driven transaction-manager="transactionManager"/>  
    
     
     <bean id="dragonThreadContext" class="com.hongbao.boapp.context.DragonThreadContext"/>
	 <bean id="dragonJsonExpose" class="com.hongbao.dragon.aspectj.DragonControllerAspect"></bean>
	 <bean id="dragonSessionMgr" class="com.hongbao.dragon.app.DragonSessionMgr"></bean>
	 <bean id="dragonCookieMgr" class="com.hongbao.dragon.app.DragonCookieMgr"></bean>
	 <bean id="dragonAttachmentHelperFactory" class="com.hongbao.boapp.attachmenthelper.DragonAttachmentHelperFactory"></bean>  
	 <bean id="dragonOssAttachmentHelper" factory-bean="dragonAttachmentHelperFactory" factory-method="createHelper"></bean>

	 
</beans>